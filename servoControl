README.file

sudo /opt/nvidia/jetson-io/jetson-io.py
runs the 40-pin header configurations

After reboot have below command to generate the spidev*.* under /dev/
sudo modprobe spidev	(must do each reboot) (but spidev.conf file is made to modprobe this on boot)

if not empty, spidev has been generated
ls /dev/spidev*


/sys/class/pwm/pwmchip2/ -> echo 0 | sudo tee export	(FOR PIN 33)
/sys/class/pwm/pwmchip0/ -> echo 0 | sudo tee export	(FOR PIN 15)
gets you /pwm0/ 
set period and duty_cycle (doing it in code)
then enable 1/0 	   (doing it in code)

---- LIST OF PINS:

I2C1 Data -> PIN 3 	(2.2k Ohm Pullup to 3.3V)
I2C1 CLK  -> PIN 5	(2.2k Ohm Pullup to 3.3V)

UART1 TXD -> PIN 8 	(Transmit via 220 Ohms, ico duplex)	(uarta)
UART1 RXD -> PIN 10	(Receive via 1k Ohms, ico duplex)	(uarta)

pwmchip0 -> PIN 15 (GPIO12)
         -> PIN 32 (busy!! GPIO07)
pwmchip2 -> PIN 33 (GPIO13)

Sensor pin -> Jetson pin:
GND  -> pin 6 (GND) 
Moti -> PIN 31 (GPIO11, line = 106) --THIS PIN IS READING MOTION VALUES-- 
--MUST BE configured to input mode with falling-edge event-- (use pullup resistor to 3.3V)
SS   -> pin 24 (spi0: chip select, CS0 PZ.06)
SC   -> pin 23 (spi0: clock, PZ.03)
MOSI -> pin 19 (spi0: PZ.05)
MISO -> pin 21 (spi0: PZ.04)
Vin  -> pin 1 (3.3V) -> pullup resistor @ motion-pin


uploadFirmware.py tests sensor reading via motion pin and uploads firmware to sensor 
pmw3360_firmware.py contains the firmware data for Mr John K PMW3360 chip

	
need i2c servo driver PCA9685 to run all 3 pwm servos (only 2 pwm pins allowed to configure on jetson orin)
or control all motors with one pwm signal (unclear what's needed to do this) 

40pin header PINOUT reComputer J3011 (page #15)
https://files.seeedstudio.com/wiki/reComputer-J4012/reComputer-J401-datasheet.pdf

PMW3360 chip datasheet
https://d3s5r33r268y59.cloudfront.net/datasheets/9604/2017-05-07-18-19-11/PMS0058-PMW3360DM-T2QU-DS-R1.50-26092016._20161202173741.pdf

Mr John K git repo with registers and arudino examples
https://github.com/mrjohnk/PMW3360DM-T2QU/blob/master/Arduino%20Examples/PMW3360DM-Interrupt/PMW3360DM-Interrupt.ino


Line 130: await asyncio.sleep(0.5) limits the sensor readings after the hand is closed
Need to: find this_angle for the motors when the object is gripped, so we dont squeeze fully every time the hand is closed
